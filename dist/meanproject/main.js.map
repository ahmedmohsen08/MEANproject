{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/products/products.component.css","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProductsComponent } from './products/products.component';\n\nconst routes: Routes = [\n  {path:'navbar',component:NavbarComponent},\n  {path:'registration',component:RegistrationComponent},\n  {path:'login',component:LoginComponent},\n  {path:'allProducts',component:ProductsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meanproject';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule,FormControl,FormGroup, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProductsComponent } from './products/products.component';\nimport { CookieService } from 'ngx-cookie-service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegistrationComponent,\n    LoginComponent,\n    ProductsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form method=\\\"POST\\\" action=\\\"index.html\\\" #f=\\\"ngForm\\\" class=\\\"needs-validation col-6\\\"\\n  (ngSubmit)=\\\"onSubmit(f,ContactName.value,Password.value)\\\"\\n  novalidate>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"ContactName\\\">ContactName</label>\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z]+\\\" ngModel #ContactNameModel=\\\"ngModel\\\" type=\\\"text\\\"\\n      name=\\\"ContactName\\\" class=\\\"form-control\\\" #ContactName class=\\\"form-control\\\" style=\\\"width:50%\\\">\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ContactNameModel.touched && !ContactNameModel.valid\\\">\\n      <div *ngIf=\\\"ContactNameModel.errors.required\\\">ContactName is required</div>\\n      <div *ngIf=\\\"ContactNameModel.errors.minLength\\\">ContactName should be minLength\\n        {{ContactNameModel.errors.minLength.requiredLength}}</div>\\n      <div *ngIf=\\\"ContactNameModel.errors.pattern\\\">\\\"ContactName doesn't match the pattern\\\"</div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"Password\\\">Password</label>\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z0-9]+\\\" ngModel #PasswordModel=\\\"ngModel\\\" type=\\\"text\\\"\\n      name=\\\"Password\\\" class=\\\"form-control\\\" #Password class=\\\"form-control\\\" style=\\\"width:50%\\\">\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"PasswordModel.touched && !PasswordModel.valid\\\">\\n      <div *ngIf=\\\"PasswordModel.errors.required\\\">Password is required</div>\\n      <div *ngIf=\\\"PasswordModel.errors.minLength\\\">Password should be minLength\\n        {{PasswordModel.errors.minLength.requiredLength}}</div>\\n      <div *ngIf=\\\"PasswordModel.errors.pattern\\\">\\\"Password doesn't match the pattern\\\"</div>\\n    </div>\\n  </div>\\n\\n  <input type=\\\"submit\\\" value=\\\"login\\\" class=\\\"btn btn-primary\\\">\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form, ContactName, Password) {\n    console.log(form.valid);\n    if (form.valid) {\n      console.log('logging in');\n      this.http.post('http://127.0.0.1:7000/login',\n        {\n          ContactName: ContactName,\n          Password: Password,\n        }).toPromise()\n        .then(data=>{\n          console.log('role: '+JSON.parse(JSON.stringify(data)));\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\r\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"allProducts\\\">Products</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item dropdown\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\"\\r\\n          aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          Dropdown\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\r\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\r\\n          <div class=\\\"dropdown-divider\\\"></div>\\r\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\r\\n        </div>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <div style=\\\"float:right\\\">\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink=''>Cart</a>\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink='/registration' *ngIf=\\\"cookie.get('accountUserName')==''\\\">register</a>\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink='/login' *ngIf=\\\"cookie.get('accountUserName')==''\\\">login</a>\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink='' *ngIf=\\\"cookie.get('accountUserName')!=''\\\">Profile</a>\\r\\n      <a class=\\\"btn btn-primary\\\" (click)=\\\"Logout()\\\" *ngIf=\\\"cookie.get('accountUserName')!=''\\\">Logout</a>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private cookie: CookieService) { }\n\n  ngOnInit() {\n  }\n\n  Logout() {\n    this.cookie.set('accountUserName', '');\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3RzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-2 m-3 bg-info\\\" *ngFor=\\\"let product of products\\\">\\n    <p>{{product.ProductName}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  products\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get('http://127.0.0.1:7000/getAllProducts').subscribe(result => {\n      this.products = result;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--<form method=\\\"POST\\\" class=\\\"needs-validation\\\" \\r\\n  (ngSubmit)=\\\"onSubmit(ContactName.value,ContactTitle.value,Phone.value,Fax.value,Address.value,Region.value,City.value,Country.value,PostalCode.value,CompanyName.value)\\\"\\r\\n  novalidate>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label for=\\\"ContactName\\\">ContactName</label>\\r\\n  <input type=\\\"text\\\" name=\\\"ContactName\\\" class=\\\"form-control\\\" #ContactName class=\\\"form-control\\\" style=\\\"width:50%\\\" required pattern=\\\"\\\">\\r\\n  <span  class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">ContactTitle</label>\\r\\n  <input type=\\\"text\\\" name=\\\"ContactTitle\\\" #ContactTitle class=\\\"form-control\\\" style=\\\"width:50%\\\" required>\\r\\n  <span  class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">Phone</label>\\r\\n  <input type=\\\"text\\\" name=\\\"Phone\\\" #Phone class=\\\"form-control\\\" style=\\\"width:50%\\\" required>\\r\\n  <span id=\\\"ContactName_error\\\" class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">Fax</label>\\r\\n  <input type=\\\"text\\\" name=\\\"Fax\\\" #Fax class=\\\"form-control\\\" style=\\\"width:50%\\\" required>\\r\\n  <span  class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">Address</label>\\r\\n  <input type=\\\"text\\\" name=\\\"Address\\\" #Address class=\\\"form-control\\\" style=\\\"width:50%\\\" required>\\r\\n  <span  class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">Region</label>\\r\\n  <input type=\\\"text\\\" name=\\\"Region\\\" #Region class=\\\"form-control\\\" style=\\\"width:50%\\\" required> \\r\\n  <span  class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n  </div>\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">City</label>\\r\\n  <input type=\\\"text\\\" name=\\\"City\\\" #City class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">Country</label>\\r\\n  <input type=\\\"text\\\" name=\\\"Country\\\" #Country class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label>PostalCode</label>\\r\\n  <input type=\\\"text\\\" name=\\\"PostalCode\\\" #PostalCode class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label>CompanyName</label>\\r\\n  <input type=\\\"text\\\" name=\\\"CompanyName\\\" #CompanyName class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"submit\\\" value=\\\"register\\\" class=\\\"btn btn-primary\\\">\\r\\n</form>\\r\\n-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--<form method=\\\"POST\\\" [formGroup]=\\\"form\\\"\\r\\n  (ngSubmit)=\\\"onSubmit(ContactName.value,ContactTitle.value,Phone.value,Fax.value,Address.value,Region.value,City.value,Country.value,PostalCode.value,CompanyName.value)\\\">\\r\\n\\r\\n  <div class=\\\"form-group \\\">\\r\\n    <label>ContactName</label>\\r\\n    <input type=\\\"text\\\" name=\\\"ContactName\\\" class=\\\"form-control\\\"\\r\\n     #ContactName formControlName=\\\"contactNameControl\\\">\\r\\n     <div *ngIf=\\\"contactNameControl.touched && contactNameControl.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"contactNameControl.errors.required\\\">{{contactNameControl.errors.required}}</div>\\r\\n      <div *ngIf=\\\"contactNameControl.errors.minLength\\\">{{contactNameControl.errors.minLength.requiredLenght}}</div>\\r\\n    </div>\\r\\n  </div>-->\\r\\n<h3>Registeration Form</h3>\\r\\n<form method=\\\"POST\\\" #f=\\\"ngForm\\\" class=\\\"needs-validation col-6\\\"\\r\\n  (ngSubmit)=\\\"onSubmit(f,ContactName.value,Password.value,ContactTitle.value,Phone.value,Fax.value,Address.value,Region.value,City.value,Country.value,PostalCode.value,CompanyName.value)\\\"\\r\\n  novalidate>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"ContactName\\\">ContactName</label>\\r\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z]+\\\" ngModel #ContactNameModel=\\\"ngModel\\\" type=\\\"text\\\"\\r\\n      name=\\\"ContactName\\\" class=\\\"form-control\\\" #ContactName class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ContactNameModel.touched && !ContactNameModel.valid\\\">\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.required\\\">ContactName is required</div>\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.minLength\\\">ContactName should be minLength\\r\\n        {{ContactNameModel.errors.minLength.requiredLength}}</div>\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.pattern\\\">\\\"ContactName doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"Password\\\">Password</label>\\r\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z0-9]+\\\" ngModel #PasswordModel=\\\"ngModel\\\" type=\\\"text\\\"\\r\\n      name=\\\"Password\\\" class=\\\"form-control\\\" #Password class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"PasswordModel.touched && !PasswordModel.valid\\\">\\r\\n      <div *ngIf=\\\"PasswordModel.errors.required\\\">Password is required</div>\\r\\n      <div *ngIf=\\\"PasswordModel.errors.minLength\\\">Password should be minLength\\r\\n        {{PasswordModel.errors.minLength.requiredLength}}</div>\\r\\n      <div *ngIf=\\\"PasswordModel.errors.pattern\\\">\\\"Password doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">ContactTitle</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" type=\\\"text\\\" name=\\\"ContactTitle\\\" #ContactTitle ngModel\\r\\n      #ContactTitleModel=\\\"ngModel\\\" class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ContactTitleModel.touched && !ContactTitleModel.valid\\\">\\r\\n      <div *ngIf=\\\"ContactTitleModel.errors.required\\\">ContactTitle is required</div>\\r\\n      <div *ngIf=\\\"ContactTitleModel.errors.minLength\\\">ContactTitle should be minLength\\r\\n        {{ContactTitleModel.errors.minLength.requiredLength}}</div>\\r\\n      <div *ngIf=\\\"ContactTitleModel.errors.pattern\\\">\\\"ContactTitle doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Phone</label>\\r\\n    <input required pattern=\\\"(01)[0-9]{9}\\\" ngModel #phoneModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Phone\\\" #Phone\\r\\n      class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"phoneModel.touched && !phoneModel.valid\\\">\\r\\n      <div *ngIf=\\\"phoneModel.errors.required\\\">phone is required</div>\\r\\n      <div *ngIf=\\\"phoneModel.errors.pattern\\\">\\\"phone doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Fax</label>\\r\\n    <input required pattern=\\\"[0-9]{5}\\\" ngModel #faxModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Fax\\\" #Fax class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"faxModel.touched && !faxModel.valid\\\">\\r\\n      <div *ngIf=\\\"faxModel.errors.required\\\">fax is required</div>\\r\\n      <div *ngIf=\\\"faxModel.errors.pattern\\\">\\\"fax doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Address</label>\\r\\n    <input required ngModel #AddressModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Address\\\" #Address class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"AddressModel.touched && !AddressModel.valid\\\">\\r\\n      <div *ngIf=\\\"AddressModel.errors.required\\\">Address is required</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Region</label>\\r\\n    <input required ngModel #RegionModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Region\\\" #Region class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"RegionModel.touched && !RegionModel.valid\\\">\\r\\n      <div *ngIf=\\\"RegionModel.errors.required\\\">Region is required</div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">City</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" ngModel #cityModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"City\\\" #City class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"cityModel.touched && !cityModel.valid\\\">\\r\\n      <div *ngIf=\\\"cityModel.errors.required\\\">city is required</div>\\r\\n      <div *ngIf=\\\"cityModel.errors.pattern\\\">\\\"city doesn't match the pattern\\\"</div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Country</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" ngModel #countryModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Country\\\" #Country\\r\\n      class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"countryModel.touched && !countryModel.valid\\\">\\r\\n      <div *ngIf=\\\"countryModel.errors.required\\\">country is required</div>\\r\\n      <div *ngIf=\\\"countryModel.errors.pattern\\\">\\\"country doesn't match the pattern\\\"</div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>PostalCode</label>\\r\\n    <input required type=\\\"text\\\" name=\\\"PostalCode\\\" #PostalCode class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>CompanyName</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" ngModel #companyModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"CompanyName\\\" #CompanyName\\r\\n      class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"companyModel.touched && !companyModel.valid\\\">\\r\\n      <div *ngIf=\\\"companyModel.errors.required\\\">CompanyName is required</div>\\r\\n      <div *ngIf=\\\"companyModel.errors.pattern\\\">\\\"CompanyName doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"submit\\\" value=\\\"register\\\" class=\\\"btn btn-primary\\\">\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  // form=new FormGroup({\r\n  //   contactNameControl:new FormControl('',[Validators.required,Validators.minLength(5),Validators.maxLength(15)])\r\n  // })\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  // get contactNameControl(){\r\n  //   return this.form.get('contactNameControl');\r\n  // }\r\n  onSubmit(form, ContactName, Password, ContactTitle, Phone, Fax, Address, Region, City, Country, PostalCode, CompanyName) {\r\n    console.log(form.valid);\r\n    if (form.valid) {\r\n      console.log('submitting');\r\n      this.http.post('http://127.0.0.1:7000/register',\r\n        {\r\n          ContactName: ContactName,\r\n          Password: Password,\r\n          ContactTitle: ContactTitle,\r\n          Phone: Phone,\r\n          Fax: Fax,\r\n          Address: Address,\r\n          Region: Region,\r\n          City: City,\r\n          Country: Country,\r\n          PostalCode: PostalCode,\r\n          CompanyName: CompanyName\r\n        }).toPromise().catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}
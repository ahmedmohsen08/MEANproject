{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart/cart.component.css","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/details-product/details-product.component.css","webpack:///./src/app/details-product/details-product.component.html","webpack:///./src/app/details-product/details-product.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/orders/orders.component.css","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/app/products/products.component.css","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { DetailsProductComponent } from './details-product/details-product.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:HomeComponent},\r\n  {path:'registration',component:RegistrationComponent},\r\n  {path:'login',component:LoginComponent},\r\n  {path:'allProducts',component:ProductsComponent},\r\n  {path:'details-product/:ProductID/:ProductName/:UnitPrice /:UnitsInStock',component:DetailsProductComponent},\r\n  {path:'cart',component:CartComponent},\r\n  {path:'orders',component:OrdersComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meanproject';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ReactiveFormsModule,FormControl,FormGroup, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { DetailsProductComponent } from './details-product/details-product.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { HomeComponent } from './home/home.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    RegistrationComponent,\r\n    LoginComponent,\r\n    ProductsComponent,\r\n    DetailsProductComponent,\r\n    CartComponent,\r\n    OrdersComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgxPaginationModule\r\n  ],\r\n  providers: [CookieService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnQvY2FydC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n<div class=\\\"row\\\">\\r\\n  <table class=\\\"table table-hover\\\">\\r\\n   <thead>\\r\\n     <tr>\\r\\n      \\r\\n     <th>Product Name</th>\\r\\n     <th>Product Price</th>\\r\\n     <th>Product Quantity</th>\\r\\n     <th>TotalProductPrice</th>\\r\\n    </tr>\\r\\n   </thead>\\r\\n   <tbody>\\r\\n     <tr *ngFor=\\\"let prd of ProductsCart;index as i \\\">\\r\\n      <td>{{prd.ProductName}}</td>\\r\\n      <td>{{prd.UnitPrice}}</td>\\r\\n      <td>\\r\\n          <span [hidden]=\\\"f==i\\\">{{prd.Quantity}}</span>\\r\\n          <input type=\\\"text\\\" *ngIf=\\\"f==i\\\" [(ngModel)]='prd.quantity' #txt (change)='Update(txt.value,i)'>\\r\\n          <div *ngIf=!valid>\\r\\n            <span class=\\\"alert alert-danger\\\">Invalid Quantity</span>\\r\\n          </div>\\r\\n\\r\\n      </td>\\r\\n      <td>{{prd.TotalPrice}}</td>\\r\\n      <td><input type=\\\"button\\\" value=\\\"Edit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateField(i)\\\"></td>    \\r\\n      <td><input type=\\\"button\\\" value=\\\"Delete\\\" class=\\\"btn btn-danger\\\" (click)=\\\"DeleteFromCart(i)\\\"></td>    \\r\\n     </tr>\\r\\n     \\r\\n   </tbody>\\r\\n\\r\\n  </table>\\r\\n  <input type=\\\"button\\\" value=\\\"Checkout\\\" class=\\\"btn btn-primary\\\" (click)=\\\"Checkout()\\\">\\r\\n</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit {\r\n  ProductsCart = [];\r\n  f = -1;\r\n  valid;\r\n  oldQuantity;\r\n  constructor(private cookie: CookieService, private http: HttpClient, private router: Router) {\r\n    //this.ProductsCart = JSON.parse(this.cookie.get(\"productsID\"));\r\n    this.cookie.get('productsID') != '' ? this.ProductsCart = JSON.parse(this.cookie.get(\"productsID\")) : this.ProductsCart = [];\r\n\r\n  }\r\n  Update(quant, index) {\r\n    this.oldQuantity = this.ProductsCart[index].quantity;\r\n    if (Number(quant) <= this.ProductsCart[index].UnitsInStock) {\r\n      this.ProductsCart[index].Quantity = quant;\r\n      this.cookie.set(\"productsID\", JSON.stringify(this.ProductsCart));\r\n      console.log(this.ProductsCart[index].Quantity)\r\n\r\n      this.valid = true;\r\n    }\r\n    else {\r\n      this.valid = false;\r\n      // this.ProductsCart[index].quantity=this.oldQuantity;\r\n      console.log(this.ProductsCart[index].Quantity)\r\n\r\n    }\r\n    this.f = -1;\r\n\r\n  }\r\n  updateField(index) {\r\n    this.oldQuantity = this.ProductsCart[index].Quantity;\r\n    this.f = index;\r\n  }\r\n  DeleteFromCart(index) {\r\n    console.log(this.ProductsCart)\r\n    console.log(index);\r\n    console.log(this.ProductsCart[index]);\r\n    this.ProductsCart.splice(index, 1);\r\n    console.log(this.ProductsCart);\r\n    this.cookie.set(\"productsID\", JSON.stringify(this.ProductsCart));\r\n    console.log(JSON.parse(this.cookie.get(\"productsID\")));\r\n\r\n  }\r\n\r\n  Checkout() {\r\n    if (this.cookie.get(\"accountUserName\") == \"\") {\r\n      this.router.navigateByUrl('login');\r\n    }\r\n    if (this.cookie.get(\"accountUserName\") != \"\") {\r\n      this.http.post('http://127.0.0.1:7000/checkout',\r\n        {\r\n          ProductsCart: this.ProductsCart,\r\n          CustomerName: this.cookie.get('accountUserName')\r\n        }).toPromise()\r\n        .then(() => {\r\n          this.cookie.set('productsID', '');\r\n          console.log(\"done\");\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    //console.log(JSON.parse(this.cookie.get(\"productsID\")))\r\n    this.valid = true;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbHMtcHJvZHVjdC9kZXRhaWxzLXByb2R1Y3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row bg-warning\\\">\\r\\n  <div class=\\\"thumbnail bg-dark center col-6\\\">\\r\\n    <p class=\\\"center text-white\\\">\\\"ProductName: {{ProductName}}</p>\\r\\n    <p class=\\\"center text-white\\\">\\\"ProductPrice: \\\"{{UnitPrice}}</p>\\r\\n    <input pattern=\\\"[0-9]+\\\" ngModel #quantityModel=\\\"ngModel\\\" type=\\\"text\\\" placeholder=\\\"product quantity\\\" #quantity>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"quantityModel.touched && !quantityModel.valid\\\">\\r\\n      <div *ngIf=\\\"quantityModel.errors.pattern\\\">ProductQuantity doesn't match the pattern</div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"quantityModel.valid\\\">\\r\\n      <div *ngIf=!valid>\\r\\n        <div class=\\\"alert alert-danger\\\">\\r\\n        Invalid Quantity\\r\\n        </div>\\r\\n      </div>\\r\\n    <input type=\\\"button\\\" value=\\\"AddToCart\\\" class=\\\"btn btn-success\\\" (click)=\\\"AddToCart(quantity.value)\\\">\\r\\n    </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { validateConfig } from '@angular/router/src/config';\r\n\r\n@Component({\r\n  selector: 'app-details-product',\r\n  templateUrl: './details-product.component.html',\r\n  styleUrls: ['./details-product.component.css']\r\n})\r\nexport class DetailsProductComponent implements OnInit {\r\n  ProductID;\r\n  ProductName;\r\n  UnitPrice;\r\n  UnitsInStock;\r\n  productsID = []\r\n  valid;\r\n  constructor(private route: ActivatedRoute, private cookie: CookieService) { }\r\n\r\n  AddToCart(ProdQuantity) {\r\n    console.log(this.UnitsInStock);\r\n    console.log(ProdQuantity);\r\n\r\n    if ((Number(ProdQuantity) > 0) && (Number(ProdQuantity) <= Number(this.UnitsInStock))) {\r\n      if (this.cookie.get(\"productsID\") == \"\") {\r\n        this.valid = true;\r\n        this.productsID.push({ \"ProductID\": this.ProductID, \"ProductName\": this.ProductName, \"Quantity\": Number(ProdQuantity), \"UnitPrice\": Number(this.UnitPrice), \"TotalPrice\": newQ, \"UnitsInStock\": this.UnitsInStock });\r\n        this.cookie.set(\"productsID\", JSON.stringify(this.productsID));\r\n\r\n      }\r\n      else {\r\n        this.productsID = JSON.parse(this.cookie.get(\"productsID\"));\r\n        var index = this.productsID.findIndex(p => p.productid == this.ProductID)\r\n\r\n        if (index != -1) {\r\n          var obj = this.productsID[index]\r\n          var NewQuant = Number(obj.quantity) + Number(ProdQuantity);\r\n          if (NewQuant <= Number(this.UnitsInStock)) {\r\n            this.valid = true;\r\n            var NewTotalPrice = (NewQuant * obj.UnitPrice);\r\n            this.productsID[index] = { \"ProductID\": this.ProductID, \"ProductName\": this.ProductName, \"Quantity\": NewQuant, \"UnitPrice\": Number(this.UnitPrice), \"TotalPrice\": NewTotalPrice, \"UnitsInStock\": this.UnitsInStock };\r\n            console.log(this.productsID[index]);\r\n          }\r\n          else {\r\n            console.log(\"invalid quantity\")\r\n            this.valid = false\r\n            //3yza atl3 prompt t2olo elquantity invalid\r\n          }\r\n        }\r\n        else {\r\n          this.valid = true;\r\n          var newQ = Number(this.UnitPrice) * Number(ProdQuantity)\r\n          this.productsID.push({ \"ProductID\": this.ProductID, \"ProductName\": this.ProductName, \"Quantity\": Number(ProdQuantity), \"UnitPrice\": Number(this.UnitPrice), \"TotalPrice\": newQ, \"UnitsInStock\": this.UnitsInStock });\r\n\r\n        }\r\n\r\n        this.cookie.set(\"productsID\", JSON.stringify(this.productsID));\r\n        console.log(JSON.parse(this.cookie.get(\"productsID\")));\r\n        console.log(\"valid\")\r\n      }\r\n\r\n    }\r\n\r\n    else {\r\n      console.log(\"invalid\")\r\n      this.valid = false;\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(data => {\r\n      console.log(data);\r\n      this.ProductID = data.get(\"ProductID\");\r\n      console.log(\"ngoninit\" + this.ProductID);\r\n      this.ProductName = data.get(\"ProductName\");\r\n      this.UnitPrice = data.get(\"UnitPrice \");\r\n      this.UnitsInStock = data.get(\"UnitsInStock\");\r\n      this.valid = true;\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div id=\\\"carouselExampleIndicators\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n    <ol class=\\\"carousel-indicators\\\">\\n      <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n      <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"1\\\"></li>\\n      <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"2\\\"></li>\\n    </ol>\\n    <div class=\\\"carousel-inner\\\">\\n      <div class=\\\"carousel-item active\\\">\\n        <img class=\\\"d-block w-100\\\" src=\\\"../../assets/1.jpg\\\" alt=\\\"First slide\\\">\\n      </div>\\n      <div class=\\\"carousel-item\\\">\\n        <img class=\\\"d-block w-100\\\" src=\\\"../../assets/2.jpeg\\\" alt=\\\"Second slide\\\">\\n      </div>\\n      <div class=\\\"carousel-item\\\">\\n        <img class=\\\"d-block w-100\\\" src=\\\"../../assets/3.jpg\\\" alt=\\\"Third slide\\\">\\n      </div>\\n    </div>\\n    <a class=\\\"carousel-control-prev\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\n      <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\">Previous</span>\\n    </a>\\n    <a class=\\\"carousel-control-next\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\n      <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\">Next</span>\\n    </a>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form method=\\\"POST\\\" action=\\\"index.html\\\" #f=\\\"ngForm\\\" class=\\\"needs-validation col-6\\\"\\n  (ngSubmit)=\\\"onSubmit(f,ContactName.value,Password.value)\\\"\\n  novalidate>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"ContactName\\\">ContactName</label>\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z]+\\\" ngModel #ContactNameModel=\\\"ngModel\\\" type=\\\"text\\\"\\n      name=\\\"ContactName\\\" class=\\\"form-control\\\" #ContactName class=\\\"form-control\\\" style=\\\"width:50%\\\">\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ContactNameModel.touched && !ContactNameModel.valid\\\">\\n      <div *ngIf=\\\"ContactNameModel.errors.required\\\">ContactName is required</div>\\n      <div *ngIf=\\\"ContactNameModel.errors.minLength\\\">ContactName should be minLength\\n        {{ContactNameModel.errors.minLength.requiredLength}}</div>\\n      <div *ngIf=\\\"ContactNameModel.errors.pattern\\\">\\\"ContactName doesn't match the pattern\\\"</div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"Password\\\">Password</label>\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z0-9]+\\\" ngModel #PasswordModel=\\\"ngModel\\\" type=\\\"text\\\"\\n      name=\\\"Password\\\" class=\\\"form-control\\\" #Password class=\\\"form-control\\\" style=\\\"width:50%\\\">\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"PasswordModel.touched && !PasswordModel.valid\\\">\\n      <div *ngIf=\\\"PasswordModel.errors.required\\\">Password is required</div>\\n      <div *ngIf=\\\"PasswordModel.errors.minLength\\\">Password should be minLength\\n        {{PasswordModel.errors.minLength.requiredLength}}</div>\\n      <div *ngIf=\\\"PasswordModel.errors.pattern\\\">\\\"Password doesn't match the pattern\\\"</div>\\n    </div>\\n  </div>\\n\\n  <input type=\\\"submit\\\" value=\\\"login\\\" class=\\\"btn btn-primary\\\">\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private http: HttpClient, private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form, ContactName, Password) {\n    console.log(form.valid);\n    if (form.valid) {\n      console.log('logging in');\n      this.http.post('http://127.0.0.1:7000/login',\n        {\n          ContactName: ContactName,\n          Password: Password,\n        }).toPromise()\n        .then(data=>{\n          console.log('role: '+JSON.parse(JSON.stringify(data)));\n          this.router.navigateByUrl('');\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\r\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=''>Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"allProducts\\\">Products</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <div style=\\\"float:right\\\">\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink='/cart'>Cart</a>\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink='/registration' *ngIf=\\\"cookie.get('accountUserName')==''\\\">register</a>\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink='/login' *ngIf=\\\"cookie.get('accountUserName')==''\\\">login</a>\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink='/orders' *ngIf=\\\"cookie.get('accountUserName')!=''\\\">MyOrders</a>\\r\\n      <a class=\\\"btn btn-primary\\\" (click)=\\\"Logout()\\\" *ngIf=\\\"cookie.get('accountUserName')!=''\\\">Logout</a>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(private cookie: CookieService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  Logout() {\r\n    this.cookie.set('accountUserName', '');\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVycy9vcmRlcnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n  <table class=\\\"table table-dark table-hover\\\">\\n    <thead>\\n      <tr>\\n        <th>OrderID</th>\\n        <th>Products</th>\\n        <th>Order Date</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let order of orders;index as i\\\">\\n        <td>{{order.orderID}}</td>\\n\\n        <td>\\n      <tr *ngFor=\\\"let product of order.products\\\">\\n        <td>{{product.product.ProductName}}</td>\\n        <td>Quantity: {{product.Quantity}}</td>\\n        <td>Price: {{product.UnitPrice}}</td>\\n      </tr>\\n      </td>\\n\\n      <td>{{order.OrderDate | date:'longDate'}}</td>\\n      <td><input type=\\\"button\\\" value=\\\"Reorder\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\" (click)=\\\"selectRow(i)\\\">\\n      </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n\\n<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" [ngStyle]=\\\"{'display':display}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Product</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <table class=\\\"table table-hover\\\">\\n          <thead>\\n            <tr>\\n              <th>ProductName</th>\\n              <th>Quantity</th>\\n              <th>Price</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let product of products;index as i\\\">\\n              <td>{{product.product.ProductName}}</td>\\n              <td>\\n                <span [hidden]=\\\"f==i\\\">{{product.Quantity}}</span>\\n                <input type=\\\"text\\\" *ngIf=\\\"f==i\\\" [(ngModel)]='product.Quantity' #txt (change)='Update(txt.value,i)'>\\n                <div *ngIf=\\\"!valid && f==i\\\">\\n                  <Span class=\\\"alert alert-danger\\\">Invalid Quantity</Span>\\n                </div>\\n              </td>\\n              <td>{{product.UnitPrice}}</td>\\n              <td><button (click)=\\\"Index(i)\\\" class=\\\"btn btn-info\\\">Edit</button></td>\\n              <td><button (click)=\\\"Delete(i)\\\" class=\\\"btn btn-info\\\">Delete</button></td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"Checkout()\\\">Order</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n\n  orders;\n  products;\n  f = -1;\n  valid = true;\n  constructor(private http: HttpClient, private cookie: CookieService, private router: Router) { }\n\n  selectRow(i) {\n    this.products = this.orders[i].products;\n  }\n\n  Index(i) {\n    this.f = i;\n  }\n\n  Update(quantity, i) {\n    if (quantity <= this.products[i].product.UnitsInStock) {\n      this.products[i].Quantity = quantity;\n      this.valid = true;\n    }\n    else {\n      this.valid = false;\n    }\n    this.f = -1;\n  }\n\n  Delete(i){\n    this.products.splice(i,1);\n  }\n\n  Checkout() {\n    if (this.cookie.get(\"accountUserName\") == \"\") {\n      this.router.navigateByUrl('login');\n    }\n    if (this.cookie.get(\"accountUserName\") != \"\") {\n      this.http.post('http://127.0.0.1:7000/checkout',\n        {\n          ProductsCart: this.products,\n          CustomerName: this.cookie.get('accountUserName')\n        }).toPromise()\n        .then(() => {\n          console.log(\"done\");\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n\n  }\n\n  ngOnInit() {\n    this.http.post('http://127.0.0.1:7000/getOrders', {username:this.cookie.get('accountUserName')}).subscribe(data => {\n      this.orders = data;\n      console.log(this.orders);\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3RzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"cookie.get('role')=='user'\\\">\\r\\n\\r\\n<!--<div *ngIf=true>-->\\r\\n  <div class=\\\"row bg-warning\\\">\\r\\n    <div class=\\\"col-2 \\\" *ngFor=\\\"let product of products | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n      <div class=\\\"thumbnail bg-dark\\\">\\r\\n        <a class=\\\"text-white\\\"\\r\\n          [routerLink]=\\\"['/details-product',product.ProductID,product.ProductName,product.UnitPrice,product.UnitsInStock]\\\">\\r\\n          <p class=\\\" center\\\">\\\"ProductName: \\\"{{product.ProductName}}</p>\\r\\n          <p class=\\\" center\\\">\\\"ProductPrice: \\\"{{product.UnitPrice}}</p>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"cookie.get('role')=='admin'\\\">\\r\\n<!--<div *ngIf=false>-->\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\" style=\\\"float:right\\\">Add\\r\\n    New Product</button>\\r\\n  <table class=\\\"table table-dark table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>ProductID</th>\\r\\n        <th>ProductName</th>\\r\\n        <th>ProductPrice</th>\\r\\n        <th>ProductQuantity</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let product of products| paginate: { itemsPerPage: 8, currentPage: p };index as i\\\">\\r\\n        <td>{{product.ProductID}}</td>\\r\\n        <td>{{product.ProductName}}</td>\\r\\n        <td>{{product.UnitPrice}}</td>\\r\\n        <td>{{product.UnitsInStock}}</td>\\r\\n        <td><input type=\\\"button\\\" value=\\\"Delete\\\" class=\\\"btn btn-danger\\\" (click)=\\\"DeleteProductByAdmin(i)\\\"></td>\\r\\n        <td><input type=\\\"button\\\" value=\\\"Edit\\\" class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\"\\r\\n            (click)=\\\"updateField(i+((p-1)*8))\\\"></td>\\r\\n      </tr>\\r\\n\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" [ngStyle]=\\\"{'display':display}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Product</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"onCloseHandled()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form id=\\\"formModal\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"ProductID\\\">ProductID</label>\\r\\n            <label #pID>{{productID}}</label>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"ProductName\\\">ProductName</label>\\r\\n            <input id=\\\"ProductName\\\" type=\\\"text\\\" placeholder=\\\"enter your ProductName\\\" class=\\\"form-control\\\"\\r\\n              value={{productName}} #pname>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"UnitPrice\\\">UnitPrice</label>\\r\\n            <input id=\\\"UnitPrice\\\" type=\\\"text\\\" placeholder=\\\"enter your UnitPrice\\\" class=\\\"form-control\\\"\\r\\n              value={{productPrice}} #pprice>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"UnitsInStock\\\">UnitsInStock</label>\\r\\n            <input id=\\\"UnitsInStock\\\" type=\\\"text\\\" placeholder=\\\"enter your UnitsInStock\\\" class=\\\"form-control\\\"\\r\\n              value={{productQuantity}} #units>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onCloseHandled()\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\r\\n          (click)=\\\"UpdateProductByAdmin(pID.innerText,pname.value,pprice.value,units.value)\\\">Save changes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  IsUser;\r\n  products\r\n  updated = -1;\r\n  p = 1;\r\n  productID;\r\n  productName;\r\n  productPrice;\r\n  productQuantity;\r\n  display;\r\n  constructor(private http: HttpClient, private cookie: CookieService) { }\r\n\r\n  DeleteProductByAdmin(index) {\r\n    console.log(this.products[index]);\r\n    console.log(this.products[index].ProductID);\r\n\r\n\r\n    this.http.post('http://127.0.0.1:7000/deleteProduct', {\r\n      productid: this.products[index].ProductID\r\n    }).subscribe(data => {\r\n\r\n    })\r\n    this.products.splice(index, 1);\r\n\r\n  }\r\n\r\n\r\n  UpdateProductByAdmin(pid, pname, pprice, punits) {\r\n\r\n    console.log(pid);\r\n    console.log(pname);\r\n    console.log(pprice);\r\n    console.log(punits);\r\n\r\n    if (this.updated != -1) {\r\n      this.http.post('http://127.0.0.1:7000/updateProduct', {\r\n        productID: pid,\r\n        productName: pname,\r\n        UnitPrice: pprice,\r\n        UnitsInStock: punits\r\n      }).subscribe(res => {\r\n        this.http.get('http://127.0.0.1:7000/getAllProducts').subscribe(result => {\r\n          this.products = result;\r\n        });\r\n      })\r\n      this.updated = -1;\r\n    }\r\n    else {\r\n      do {\r\n        var id = Math.floor(Math.random() * 100) + 10;\r\n        var exist = this.products.some(p => p.ProductID == id)\r\n      } while (exist == true)\r\n\r\n      this.http.post('http://127.0.0.1:7000/AddProduct', {\r\n        productID: id,\r\n        productName: pname,\r\n        UnitPrice: pprice,\r\n        UnitsInStock: punits\r\n      }).subscribe(res => {\r\n        this.http.get('http://127.0.0.1:7000/getAllProducts').subscribe(result => {\r\n          this.products = result;\r\n        });\r\n      })\r\n    }\r\n    this.productID = \"\";\r\n    this.productName = \"\";\r\n    this.productPrice = \"\";\r\n    this.productQuantity = \"\";\r\n\r\n  }\r\n\r\n\r\n  onCloseHandled() {\r\n    this.productID = \"\";\r\n    this.productName = \"\";\r\n    this.productPrice = \"\";\r\n    this.productQuantity = \"\";\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  updateField(index) {\r\n    this.updated = index;\r\n    this.productID = this.products[index].ProductID;\r\n    this.productName = this.products[index].ProductName;\r\n    this.productPrice = this.products[index].UnitPrice;\r\n    this.productQuantity = this.products[index].UnitsInStock;\r\n    console.log(index);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.cookie.get('role') == 'admin' ? this.IsUser = false : this.IsUser = true;\r\n    this.http.get('http://127.0.0.1:7000/getAllProducts').subscribe(result => {\r\n      this.products = result;\r\n      console.log(this.products);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h3>Registeration Form</h3>\\r\\n<form method=\\\"POST\\\" #f=\\\"ngForm\\\" class=\\\"needs-validation col-6\\\"\\r\\n  (ngSubmit)=\\\"onSubmit(f,ContactName.value,Password.value,ContactTitle.value,Phone.value,Fax.value,Address.value,Region.value,City.value,Country.value,PostalCode.value,CompanyName.value)\\\"\\r\\n  novalidate>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"ContactName\\\">ContactName</label>\\r\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z]+\\\" ngModel #ContactNameModel=\\\"ngModel\\\" type=\\\"text\\\"\\r\\n      name=\\\"ContactName\\\" class=\\\"form-control\\\" #ContactName class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ContactNameModel.touched && !ContactNameModel.valid\\\">\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.required\\\">ContactName is required</div>\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.minLength\\\">ContactName should be minLength\\r\\n        {{ContactNameModel.errors.minLength.requiredLength}}</div>\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.pattern\\\">\\\"ContactName doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"flag\\\">\\r\\n      <span class=\\\"alert alert-danger\\\">Contact Name Already Exist</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"Password\\\">Password</label>\\r\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z0-9]+\\\" ngModel #PasswordModel=\\\"ngModel\\\" type=\\\"text\\\"\\r\\n      name=\\\"Password\\\" class=\\\"form-control\\\" #Password class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"PasswordModel.touched && !PasswordModel.valid\\\">\\r\\n      <div *ngIf=\\\"PasswordModel.errors.required\\\">Password is required</div>\\r\\n      <div *ngIf=\\\"PasswordModel.errors.minLength\\\">Password should be minLength\\r\\n        {{PasswordModel.errors.minLength.requiredLength}}</div>\\r\\n      <div *ngIf=\\\"PasswordModel.errors.pattern\\\">\\\"Password doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">ContactTitle</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" type=\\\"text\\\" name=\\\"ContactTitle\\\" #ContactTitle ngModel\\r\\n      #ContactTitleModel=\\\"ngModel\\\" class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ContactTitleModel.touched && !ContactTitleModel.valid\\\">\\r\\n      <div *ngIf=\\\"ContactTitleModel.errors.required\\\">ContactTitle is required</div>\\r\\n      <div *ngIf=\\\"ContactTitleModel.errors.minLength\\\">ContactTitle should be minLength\\r\\n        {{ContactTitleModel.errors.minLength.requiredLength}}</div>\\r\\n      <div *ngIf=\\\"ContactTitleModel.errors.pattern\\\">\\\"ContactTitle doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Phone</label>\\r\\n    <input required pattern=\\\"(01)[0-9]{9}\\\" ngModel #phoneModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Phone\\\" #Phone\\r\\n      class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"phoneModel.touched && !phoneModel.valid\\\">\\r\\n      <div *ngIf=\\\"phoneModel.errors.required\\\">phone is required</div>\\r\\n      <div *ngIf=\\\"phoneModel.errors.pattern\\\">\\\"phone doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Fax</label>\\r\\n    <input required pattern=\\\"[0-9]{5}\\\" ngModel #faxModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Fax\\\" #Fax class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"faxModel.touched && !faxModel.valid\\\">\\r\\n      <div *ngIf=\\\"faxModel.errors.required\\\">fax is required</div>\\r\\n      <div *ngIf=\\\"faxModel.errors.pattern\\\">\\\"fax doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Address</label>\\r\\n    <input required ngModel #AddressModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Address\\\" #Address class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"AddressModel.touched && !AddressModel.valid\\\">\\r\\n      <div *ngIf=\\\"AddressModel.errors.required\\\">Address is required</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Region</label>\\r\\n    <input required ngModel #RegionModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Region\\\" #Region class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"RegionModel.touched && !RegionModel.valid\\\">\\r\\n      <div *ngIf=\\\"RegionModel.errors.required\\\">Region is required</div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">City</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" ngModel #cityModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"City\\\" #City class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"cityModel.touched && !cityModel.valid\\\">\\r\\n      <div *ngIf=\\\"cityModel.errors.required\\\">city is required</div>\\r\\n      <div *ngIf=\\\"cityModel.errors.pattern\\\">\\\"city doesn't match the pattern\\\"</div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Country</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" ngModel #countryModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Country\\\" #Country\\r\\n      class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"countryModel.touched && !countryModel.valid\\\">\\r\\n      <div *ngIf=\\\"countryModel.errors.required\\\">country is required</div>\\r\\n      <div *ngIf=\\\"countryModel.errors.pattern\\\">\\\"country doesn't match the pattern\\\"</div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>PostalCode</label>\\r\\n    <input required type=\\\"text\\\" name=\\\"PostalCode\\\" #PostalCode class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>CompanyName</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" ngModel #companyModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"CompanyName\\\" #CompanyName\\r\\n      class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"companyModel.touched && !companyModel.valid\\\">\\r\\n      <div *ngIf=\\\"companyModel.errors.required\\\">CompanyName is required</div>\\r\\n      <div *ngIf=\\\"companyModel.errors.pattern\\\">\\\"CompanyName doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"submit\\\" value=\\\"register\\\" class=\\\"btn btn-primary\\\">\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  // form=new FormGroup({\r\n  //   contactNameControl:new FormControl('',[Validators.required,Validators.minLength(5),Validators.maxLength(15)])\r\n  // })\r\n\r\n  flag=false;\r\n  constructor(private http: HttpClient, private router:Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  // get contactNameControl(){\r\n  //   return this.form.get('contactNameControl');\r\n  // }\r\n  onSubmit(form, ContactName, Password, ContactTitle, Phone, Fax, Address, Region, City, Country, PostalCode, CompanyName) {\r\n    console.log(form.valid);\r\n    if (form.valid) {\r\n      console.log('submitting');\r\n      this.http.post('http://127.0.0.1:7000/register',\r\n        {\r\n          ContactName: ContactName,\r\n          Password: Password,\r\n          ContactTitle: ContactTitle,\r\n          Phone: Phone,\r\n          Fax: Fax,\r\n          Address: Address,\r\n          Region: Region,\r\n          City: City,\r\n          Country: Country,\r\n          PostalCode: PostalCode,\r\n          CompanyName: CompanyName\r\n        }).toPromise().then(res => {\r\n          var response:any = res;\r\n          if (response.state == 'exist') {\r\n            this.flag=true;\r\n          }\r\n          else if (response.state == 'not exist') {\r\n            this.router.navigateByUrl('login');\r\n          }\r\n        }).catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}
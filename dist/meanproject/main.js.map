{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart/cart.component.css","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/details-product/details-product.component.css","webpack:///./src/app/details-product/details-product.component.html","webpack:///./src/app/details-product/details-product.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/products/products.component.css","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { DetailsProductComponent } from './details-product/details-product.component';\r\nimport { CartComponent } from './cart/cart.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'navbar',component:NavbarComponent},\r\n  {path:'registration',component:RegistrationComponent},\r\n  {path:'login',component:LoginComponent},\r\n  {path:'allProducts',component:ProductsComponent},\r\n  {path:'details-product/:ProductID/:ProductName/:UnitPrice /:UnitsInStock',component:DetailsProductComponent},\r\n  {path:'cart',component:CartComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'meanproject';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ReactiveFormsModule,FormControl,FormGroup, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { DetailsProductComponent } from './details-product/details-product.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    RegistrationComponent,\r\n    LoginComponent,\r\n    ProductsComponent,\r\n    DetailsProductComponent,\r\n    CartComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgxPaginationModule\r\n  ],\r\n  providers: [CookieService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnQvY2FydC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n<div class=\\\"row\\\">\\n  <table class=\\\"table table-hover\\\">\\n   <thead>\\n     <tr>\\n      \\n     <th>Product Name</th>\\n     <th>Product Price</th>\\n     <th>Product Quantity</th>\\n     <th>TotalProductPrice</th>\\n    </tr>\\n   </thead>\\n   <tbody>\\n     <tr *ngFor=\\\"let prd of ProductsCart;index as i \\\">\\n      <td>{{prd.productName}}</td>\\n      <td>{{prd.UnitPrice}}</td>\\n      <td>\\n          <span [hidden]=\\\"f==i\\\">{{prd.quantity}}</span>\\n          <input type=\\\"text\\\" *ngIf=\\\"f==i\\\" [(ngModel)]='prd.quantity' #txt (change)='Update(txt.value,i)'>\\n          <div *ngIf=!valid>\\n            <span class=\\\"alert alert-danger\\\">Invalid Quantity</span>\\n          </div>\\n\\n      </td>\\n      <td>{{prd.TotalPrice}}</td>\\n      <td><input type=\\\"button\\\" value=\\\"Edit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateField(i)\\\"></td>    \\n      <td><input type=\\\"button\\\" value=\\\"Delete\\\" class=\\\"btn btn-danger\\\" (click)=\\\"DeleteFromCart(i)\\\"></td>    \\n     </tr>\\n     \\n   </tbody>\\n\\n  </table>\\n  <input type=\\\"button\\\" value=\\\"Checkout\\\" class=\\\"btn btn-primary\\\" (click)=\\\"Checkout()\\\">\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  ProductsCart=[];\n  f=-1;\n  valid;\n  oldQuantity;\n  constructor(private cookie:CookieService,private http:HttpClient) { \n    this.ProductsCart=JSON.parse(this.cookie.get(\"productsID\"));\n    \n  }\n  Update(quant,index){\n    this.oldQuantity=this.ProductsCart[index].quantity;\n     if(Number(quant)<=this.ProductsCart[index].UnitsInStock)\n     {\n      this.ProductsCart[index].quantity=quant;\n      this.cookie.set(\"productsID\",JSON.stringify(this.ProductsCart));\n      console.log(this.ProductsCart[index].quantity)\n\n     this.valid=true;\n     }\n     else\n     {\n       this.valid=false;\n      // this.ProductsCart[index].quantity=this.oldQuantity;\n       console.log(this.ProductsCart[index].quantity)\n\n     }\n     this.f=-1;\n\n  }\n  updateField(index)\n  {\n    this.oldQuantity=this.ProductsCart[index].quantity;\n    this.f=index;\n  }\n  DeleteFromCart(index){\n    console.log(this.ProductsCart)\n    console.log(index);\n    console.log(this.ProductsCart[index]);\n    this.ProductsCart.splice(index,1);\n    console.log(this.ProductsCart);\n    this.cookie.set(\"productsID\",JSON.stringify(this.ProductsCart));\n    console.log(JSON.parse(this.cookie.get(\"productsID\")));\n\n  }\n\n  Checkout(){\n    console.log(\"checkout\");\n    console.log(this.cookie.get(\"accountUserName\"));\n    if(this.cookie.get(\"accountUserName\")!=\" \")\n    {\n      console.log(this.cookie.get(\"accountUserName\").toString())\n      this.http.post('http://127.0.0.1:7000/checkout',\n      {\n       ProductsCart:this.ProductsCart\n      }).toPromise()\n      .then(()=>{\n        console.log(\"done\");\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    }\n \n  }\n  ngOnInit() {\n   console.log(JSON.parse(this.cookie.get(\"productsID\")))\n   this.valid=true; \n  }\n  \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbHMtcHJvZHVjdC9kZXRhaWxzLXByb2R1Y3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row bg-warning\\\">\\n  <div class=\\\"thumbnail bg-dark center col-6\\\">\\n    <p class=\\\"center text-white\\\">\\\"ProductName: {{ProductName}}</p>\\n    <p class=\\\"center text-white\\\">\\\"ProductPrice: \\\"{{UnitPrice}}</p>\\n    <input pattern=\\\"[0-9]+\\\" ngModel #quantityModel=\\\"ngModel\\\" type=\\\"text\\\" placeholder=\\\"product quantity\\\" #quantity>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"quantityModel.touched && !quantityModel.valid\\\">\\n      <div *ngIf=\\\"quantityModel.errors.pattern\\\">ProductQuantity doesn't match the pattern</div>\\n    </div>\\n    <div *ngIf=\\\"quantityModel.valid\\\">\\n      <div *ngIf=!valid>\\n        <div class=\\\"alert alert-danger\\\">\\n        Invalid Quantity\\n        </div>\\n      </div>\\n    <input type=\\\"button\\\" value=\\\"AddToCart\\\" class=\\\"btn btn-success\\\" (click)=\\\"AddToCart(quantity.value)\\\">\\n    </div>\\n    </div>\\n\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { validateConfig } from '@angular/router/src/config';\n\n@Component({\n  selector: 'app-details-product',\n  templateUrl: './details-product.component.html',\n  styleUrls: ['./details-product.component.css']\n})\nexport class DetailsProductComponent implements OnInit {\n  ProductID;\n  ProductName;\n  UnitPrice ;\n  UnitsInStock;\n  productsID=[]\n  valid;\n  constructor(private route:ActivatedRoute,private cookie:CookieService) {\n   //this.cookie.delete(\"productsID\")\n  // this.cookie.set(\"productsID\",JSON.stringify(this.productsID));\n   }\n  AddToCart(ProdQuantity)\n  {\n    console.log(this.UnitsInStock);\n    console.log(ProdQuantity);\n\n    if(( Number(ProdQuantity)>0) && (Number(ProdQuantity) <=Number(this.UnitsInStock)))\n    {  \n      this.productsID=JSON.parse(this.cookie.get(\"productsID\"));\n      console.log(this.productsID)\n      console.log(this.productsID.length)\n\n    \n      var index=this.productsID.findIndex(p=>p.productid==this.ProductID)\n\n      if(index!=-1)\n      {\n        var obj= this.productsID[index]\n        var NewQuant=Number(obj.quantity)+Number(ProdQuantity);\n          if(NewQuant<=Number(this.UnitsInStock))\n            {\n              this.valid=true;\n              var NewTotalPrice=(NewQuant*obj.UnitPrice);\n              this.productsID[index]={\"productid\":this.ProductID,\"productName\":this.ProductName,\"quantity\":NewQuant,\"UnitPrice\":Number(this.UnitPrice),\"TotalPrice\":NewTotalPrice,\"UnitsInStock\":this.UnitsInStock};\n              console.log(this.productsID[index]);\n            }\n          else\n            {\n              console.log(\"invalid quantity\")\n              this.valid=false\n              //3yza atl3 prompt t2olo elquantity invalid\n            }\n      }\n      else\n      {\n        this.valid=true;\n        var newQ=Number(this.UnitPrice)*Number(ProdQuantity)\n        this.productsID.push({\"productid\":this.ProductID,\"productName\":this.ProductName,\"quantity\":Number(ProdQuantity),\"UnitPrice\":Number(this.UnitPrice),\"TotalPrice\":newQ,\"UnitsInStock\":this.UnitsInStock});\n\n      }\n\n     this.cookie.set(\"productsID\",JSON.stringify(this.productsID));\n        console.log(JSON.parse(this.cookie.get(\"productsID\")));\n      console.log(\"valid\")\n    }\n  \n    else\n    {\n      console.log(\"invalid\")\n      this.valid=false;\n    }\n    \n   \n\n  }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(data=>{\n      console.log(data);\n      this.ProductID=data.get(\"ProductID\");\n      console.log(\"ngoninit\"+ this.ProductID);\n      this.ProductName=data.get(\"ProductName\");\n      this.UnitPrice =data.get(\"UnitPrice \");\n      this.UnitsInStock=data.get(\"UnitsInStock\");\n      this.valid=true;\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form method=\\\"POST\\\" action=\\\"index.html\\\" #f=\\\"ngForm\\\" class=\\\"needs-validation col-6\\\"\\r\\n  (ngSubmit)=\\\"onSubmit(f,ContactName.value,Password.value)\\\"\\r\\n  novalidate>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"ContactName\\\">ContactName</label>\\r\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z]+\\\" ngModel #ContactNameModel=\\\"ngModel\\\" type=\\\"text\\\"\\r\\n      name=\\\"ContactName\\\" class=\\\"form-control\\\" #ContactName class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ContactNameModel.touched && !ContactNameModel.valid\\\">\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.required\\\">ContactName is required</div>\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.minLength\\\">ContactName should be minLength\\r\\n        {{ContactNameModel.errors.minLength.requiredLength}}</div>\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.pattern\\\">\\\"ContactName doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"Password\\\">Password</label>\\r\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z0-9]+\\\" ngModel #PasswordModel=\\\"ngModel\\\" type=\\\"text\\\"\\r\\n      name=\\\"Password\\\" class=\\\"form-control\\\" #Password class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"PasswordModel.touched && !PasswordModel.valid\\\">\\r\\n      <div *ngIf=\\\"PasswordModel.errors.required\\\">Password is required</div>\\r\\n      <div *ngIf=\\\"PasswordModel.errors.minLength\\\">Password should be minLength\\r\\n        {{PasswordModel.errors.minLength.requiredLength}}</div>\\r\\n      <div *ngIf=\\\"PasswordModel.errors.pattern\\\">\\\"Password doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"submit\\\" value=\\\"login\\\" class=\\\"btn btn-primary\\\">\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit(form, ContactName, Password) {\r\n    console.log(form.valid);\r\n    if (form.valid) {\r\n      console.log('logging in');\r\n      this.http.post('http://127.0.0.1:7000/login',\r\n        {\r\n          ContactName: ContactName,\r\n          Password: Password,\r\n        }).toPromise()\r\n        .then(data=>{\r\n          console.log('role: '+JSON.parse(JSON.stringify(data)));\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\r\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"allProducts\\\">Products</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"cart\\\">Cart</a>\\r\\n        </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <div style=\\\"float:right\\\">\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink=''>Cart</a>\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink='/registration' *ngIf=\\\"cookie.get('accountUserName')==''\\\">register</a>\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink='/login' *ngIf=\\\"cookie.get('accountUserName')==''\\\">login</a>\\r\\n      <a class=\\\"btn btn-primary\\\" routerLink='' *ngIf=\\\"cookie.get('accountUserName')!=''\\\">Profile</a>\\r\\n      <a class=\\\"btn btn-primary\\\" (click)=\\\"Logout()\\\" *ngIf=\\\"cookie.get('accountUserName')!=''\\\">Logout</a>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(private cookie: CookieService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  Logout() {\r\n    this.cookie.set('accountUserName', '');\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3RzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n<div *ngIf=\\\"IsUser;else admin\\\">\\r\\n<div class=\\\"row bg-warning\\\">\\r\\n    <div class=\\\"col-2 \\\" *ngFor=\\\"let product of products | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n      <div  class=\\\"thumbnail bg-dark\\\">\\r\\n      <a class=\\\"text-white\\\" [routerLink]=\\\"['/details-product',product.ProductID,product.ProductName,product.UnitPrice,product.UnitsInStock]\\\">\\r\\n          <p class=\\\" center\\\">\\\"ProductName: \\\"{{product.ProductName}}</p>\\r\\n          <p class=\\\" center\\\">\\\"ProductPrice: \\\"{{product.UnitPrice}}</p>\\r\\n      </a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #admin>\\r\\n  \\r\\n<div class=\\\"container\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modal\\\">Add new Product</button>\\r\\n        <div  id=\\\"modal\\\" class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n                  <div class=\\\"modal-content\\\">\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n  \\r\\n                      <form >\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label  for=\\\"ProductName\\\">ProductName:</label>\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"enter your ProductName\\\" id=\\\"ProductName\\\" class=\\\"form-control\\\" #ProductName > \\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"ProductPrice\\\">ProductPrice:</label>\\r\\n                            <input id=\\\"ProductPrice\\\" type=\\\"text\\\" placeholder=\\\"enter your ProductPrice\\\" class=\\\"form-control\\\" #ProductPrice >\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"UnitsInStock\\\">UnitsInStock:</label>\\r\\n                            <input id=\\\"UnitsInStock\\\" type=\\\"text\\\" placeholder=\\\"enter your UnitsInStock\\\" class=\\\"form-control\\\" #UnitsInStock >\\r\\n                        </div>\\r\\n                      </form>\\r\\n  \\r\\n                    </div>\\r\\n                    \\r\\n                    <div class=\\\"modal-footer\\\">\\r\\n                      <button type=\\\"button\\\"id=\\\"save\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"setArr()\\\">save </button>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                    </div>\\r\\n  \\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n  </div>\\r\\n    <table class=\\\"table table-dark table-hover\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n              <th>ProductID</th>\\r\\n              <th>ProductName</th>\\r\\n              <th>ProductPrice</th>\\r\\n              <th>ProductQuantity</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let product of products| paginate: { itemsPerPage: 8, currentPage: p };index as i\\\">\\r\\n      \\r\\n              <td>{{product.ProductID}}</td>\\r\\n              <td>{{product.ProductName}}</td>\\r\\n              <td>\\r\\n                  <span [hidden]=\\\"f==i\\\">{{product.UnitPrice}}</span>\\r\\n                  <input type=\\\"text\\\" *ngIf=\\\"f==i\\\" [(ngModel)]='product.UnitPrice' #txtPrice>\\r\\n\\r\\n              </td>\\r\\n\\r\\n              <td>\\r\\n                  <span [hidden]=\\\"f==i\\\">{{product.UnitsInStock}}</span>\\r\\n                  <input type=\\\"text\\\" *ngIf=\\\"f==i\\\" [(ngModel)]='product.UnitsInStock' #txtUnits> \\r\\n              </td>\\r\\n              <td><input type=\\\"button\\\" value=\\\"Delete\\\" class=\\\"btn btn-danger\\\" (click)=\\\"DeleteProductByAdmin(i)\\\"></td>\\r\\n              <td><input type=\\\"button\\\" value=\\\"Edit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateField(i)\\\"></td>\\r\\n            </tr>\\r\\n      \\r\\n        </tbody>\\r\\n      </table>\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n  IsUser;\r\n  products\r\n  f=-1;\r\n  p=1;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  DeleteProductByAdmin(index){\r\n   console.log(this.products[index]);\r\n   console.log(this.products[index].ProductID);\r\n     \r\n\r\n   this.http.post('http://127.0.0.1:7000/deleteProduct',{\r\n     productid:this.products[index].ProductID\r\n   }).subscribe(data=>{\r\n\r\n   })\r\n   this.products.splice(index,1);\r\n\r\n  }\r\n\r\n \r\n  UpdateProductByAdmin(price,units,index){\r\n   this.products[index].UnitPrice=price;\r\n   this.products[index].UnitsInStock=units;\r\n   this.f=-1;\r\n  /* this.http.post('http://127.0.0.1:7000/updateProduct',{\r\n    Productid:this.products[index].ProductID,\r\n    ProductPrice: this.products[index].UnitPrice,\r\n    productQuantity:this.products[index].UnitsInStock\r\n  })*/\r\n  }\r\n  updateField(index){\r\n    this.f=index;\r\n  }\r\n  \r\n \r\n  ngOnInit() {\r\n    this.IsUser=false;\r\n    this.http.get('http://127.0.0.1:7000/getAllProducts').subscribe(result => {\r\n      this.products = result;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--<form method=\\\"POST\\\" class=\\\"needs-validation\\\" \\r\\n  (ngSubmit)=\\\"onSubmit(ContactName.value,ContactTitle.value,Phone.value,Fax.value,Address.value,Region.value,City.value,Country.value,PostalCode.value,CompanyName.value)\\\"\\r\\n  novalidate>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label for=\\\"ContactName\\\">ContactName</label>\\r\\n  <input type=\\\"text\\\" name=\\\"ContactName\\\" class=\\\"form-control\\\" #ContactName class=\\\"form-control\\\" style=\\\"width:50%\\\" required pattern=\\\"\\\">\\r\\n  <span  class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">ContactTitle</label>\\r\\n  <input type=\\\"text\\\" name=\\\"ContactTitle\\\" #ContactTitle class=\\\"form-control\\\" style=\\\"width:50%\\\" required>\\r\\n  <span  class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">Phone</label>\\r\\n  <input type=\\\"text\\\" name=\\\"Phone\\\" #Phone class=\\\"form-control\\\" style=\\\"width:50%\\\" required>\\r\\n  <span id=\\\"ContactName_error\\\" class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">Fax</label>\\r\\n  <input type=\\\"text\\\" name=\\\"Fax\\\" #Fax class=\\\"form-control\\\" style=\\\"width:50%\\\" required>\\r\\n  <span  class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">Address</label>\\r\\n  <input type=\\\"text\\\" name=\\\"Address\\\" #Address class=\\\"form-control\\\" style=\\\"width:50%\\\" required>\\r\\n  <span  class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">Region</label>\\r\\n  <input type=\\\"text\\\" name=\\\"Region\\\" #Region class=\\\"form-control\\\" style=\\\"width:50%\\\" required> \\r\\n  <span  class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n  </div>\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">City</label>\\r\\n  <input type=\\\"text\\\" name=\\\"City\\\" #City class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label class=\\\"control-label\\\">Country</label>\\r\\n  <input type=\\\"text\\\" name=\\\"Country\\\" #Country class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label>PostalCode</label>\\r\\n  <input type=\\\"text\\\" name=\\\"PostalCode\\\" #PostalCode class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label>CompanyName</label>\\r\\n  <input type=\\\"text\\\" name=\\\"CompanyName\\\" #CompanyName class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"submit\\\" value=\\\"register\\\" class=\\\"btn btn-primary\\\">\\r\\n</form>\\r\\n-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--<form method=\\\"POST\\\" [formGroup]=\\\"form\\\"\\r\\n  (ngSubmit)=\\\"onSubmit(ContactName.value,ContactTitle.value,Phone.value,Fax.value,Address.value,Region.value,City.value,Country.value,PostalCode.value,CompanyName.value)\\\">\\r\\n\\r\\n  <div class=\\\"form-group \\\">\\r\\n    <label>ContactName</label>\\r\\n    <input type=\\\"text\\\" name=\\\"ContactName\\\" class=\\\"form-control\\\"\\r\\n     #ContactName formControlName=\\\"contactNameControl\\\">\\r\\n     <div *ngIf=\\\"contactNameControl.touched && contactNameControl.invalid\\\" class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"contactNameControl.errors.required\\\">{{contactNameControl.errors.required}}</div>\\r\\n      <div *ngIf=\\\"contactNameControl.errors.minLength\\\">{{contactNameControl.errors.minLength.requiredLenght}}</div>\\r\\n    </div>\\r\\n  </div>-->\\r\\n<h3>Registeration Form</h3>\\r\\n<form method=\\\"POST\\\" #f=\\\"ngForm\\\" class=\\\"needs-validation col-6\\\"\\r\\n  (ngSubmit)=\\\"onSubmit(f,ContactName.value,Password.value,ContactTitle.value,Phone.value,Fax.value,Address.value,Region.value,City.value,Country.value,PostalCode.value,CompanyName.value)\\\"\\r\\n  novalidate>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"ContactName\\\">ContactName</label>\\r\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z]+\\\" ngModel #ContactNameModel=\\\"ngModel\\\" type=\\\"text\\\"\\r\\n      name=\\\"ContactName\\\" class=\\\"form-control\\\" #ContactName class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ContactNameModel.touched && !ContactNameModel.valid\\\">\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.required\\\">ContactName is required</div>\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.minLength\\\">ContactName should be minLength\\r\\n        {{ContactNameModel.errors.minLength.requiredLength}}</div>\\r\\n      <div *ngIf=\\\"ContactNameModel.errors.pattern\\\">\\\"ContactName doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"Password\\\">Password</label>\\r\\n    <input required minlength=\\\"5\\\" maxlength=\\\"15\\\" pattern=\\\"[a-zA-Z0-9]+\\\" ngModel #PasswordModel=\\\"ngModel\\\" type=\\\"text\\\"\\r\\n      name=\\\"Password\\\" class=\\\"form-control\\\" #Password class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"PasswordModel.touched && !PasswordModel.valid\\\">\\r\\n      <div *ngIf=\\\"PasswordModel.errors.required\\\">Password is required</div>\\r\\n      <div *ngIf=\\\"PasswordModel.errors.minLength\\\">Password should be minLength\\r\\n        {{PasswordModel.errors.minLength.requiredLength}}</div>\\r\\n      <div *ngIf=\\\"PasswordModel.errors.pattern\\\">\\\"Password doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">ContactTitle</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" type=\\\"text\\\" name=\\\"ContactTitle\\\" #ContactTitle ngModel\\r\\n      #ContactTitleModel=\\\"ngModel\\\" class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ContactTitleModel.touched && !ContactTitleModel.valid\\\">\\r\\n      <div *ngIf=\\\"ContactTitleModel.errors.required\\\">ContactTitle is required</div>\\r\\n      <div *ngIf=\\\"ContactTitleModel.errors.minLength\\\">ContactTitle should be minLength\\r\\n        {{ContactTitleModel.errors.minLength.requiredLength}}</div>\\r\\n      <div *ngIf=\\\"ContactTitleModel.errors.pattern\\\">\\\"ContactTitle doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Phone</label>\\r\\n    <input required pattern=\\\"(01)[0-9]{9}\\\" ngModel #phoneModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Phone\\\" #Phone\\r\\n      class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"phoneModel.touched && !phoneModel.valid\\\">\\r\\n      <div *ngIf=\\\"phoneModel.errors.required\\\">phone is required</div>\\r\\n      <div *ngIf=\\\"phoneModel.errors.pattern\\\">\\\"phone doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Fax</label>\\r\\n    <input required pattern=\\\"[0-9]{5}\\\" ngModel #faxModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Fax\\\" #Fax class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"faxModel.touched && !faxModel.valid\\\">\\r\\n      <div *ngIf=\\\"faxModel.errors.required\\\">fax is required</div>\\r\\n      <div *ngIf=\\\"faxModel.errors.pattern\\\">\\\"fax doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Address</label>\\r\\n    <input required ngModel #AddressModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Address\\\" #Address class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"AddressModel.touched && !AddressModel.valid\\\">\\r\\n      <div *ngIf=\\\"AddressModel.errors.required\\\">Address is required</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Region</label>\\r\\n    <input required ngModel #RegionModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Region\\\" #Region class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"RegionModel.touched && !RegionModel.valid\\\">\\r\\n      <div *ngIf=\\\"RegionModel.errors.required\\\">Region is required</div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">City</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" ngModel #cityModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"City\\\" #City class=\\\"form-control\\\"\\r\\n      style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"cityModel.touched && !cityModel.valid\\\">\\r\\n      <div *ngIf=\\\"cityModel.errors.required\\\">city is required</div>\\r\\n      <div *ngIf=\\\"cityModel.errors.pattern\\\">\\\"city doesn't match the pattern\\\"</div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\">Country</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" ngModel #countryModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Country\\\" #Country\\r\\n      class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"countryModel.touched && !countryModel.valid\\\">\\r\\n      <div *ngIf=\\\"countryModel.errors.required\\\">country is required</div>\\r\\n      <div *ngIf=\\\"countryModel.errors.pattern\\\">\\\"country doesn't match the pattern\\\"</div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>PostalCode</label>\\r\\n    <input required type=\\\"text\\\" name=\\\"PostalCode\\\" #PostalCode class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>CompanyName</label>\\r\\n    <input required pattern=\\\"[a-zA-Z]+\\\" ngModel #companyModel=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"CompanyName\\\" #CompanyName\\r\\n      class=\\\"form-control\\\" style=\\\"width:50%\\\">\\r\\n    <span class=\\\"invalid-feedback\\\">please fill out this field</span>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"companyModel.touched && !companyModel.valid\\\">\\r\\n      <div *ngIf=\\\"companyModel.errors.required\\\">CompanyName is required</div>\\r\\n      <div *ngIf=\\\"companyModel.errors.pattern\\\">\\\"CompanyName doesn't match the pattern\\\"</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"submit\\\" value=\\\"register\\\" class=\\\"btn btn-primary\\\">\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  // form=new FormGroup({\r\n  //   contactNameControl:new FormControl('',[Validators.required,Validators.minLength(5),Validators.maxLength(15)])\r\n  // })\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  // get contactNameControl(){\r\n  //   return this.form.get('contactNameControl');\r\n  // }\r\n  onSubmit(form, ContactName, Password, ContactTitle, Phone, Fax, Address, Region, City, Country, PostalCode, CompanyName) {\r\n    console.log(form.valid);\r\n    if (form.valid) {\r\n      console.log('submitting');\r\n      this.http.post('http://127.0.0.1:7000/register',\r\n        {\r\n          ContactName: ContactName,\r\n          Password: Password,\r\n          ContactTitle: ContactTitle,\r\n          Phone: Phone,\r\n          Fax: Fax,\r\n          Address: Address,\r\n          Region: Region,\r\n          City: City,\r\n          Country: Country,\r\n          PostalCode: PostalCode,\r\n          CompanyName: CompanyName\r\n        }).toPromise().catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}